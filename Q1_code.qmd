# Visualization 1

Violin plot of height by decade for Mens basketball players

Ideas: In dashboard could filter height by country and decade

```{r}
#| label: Visualization 1
#| warning: False
#| message: False

# Visualization 1

# Load in packages
if (!require("pacman")) 
  install.packages("pacman")

pacman::p_load(tidyverse,
               ggridges,
               here,
               RColorBrewer,
               DescTools,
               grid)


#### Load in Data
olympics <- read_csv(here("data", "athlete_events.csv"))

#### Data Prep

# create decade column, years are rounded down for decade column (EX: Year=1896,Decade=1890)
olympics$Decade <- floor(olympics$Year / 10) * 10

# create height in inches column
olympics$Height_Inches <- round(olympics$Height / 2.54)

# create new df containing only basketball data
basketball <- subset(olympics, Sport == 'Basketball')

# create height in feet column
basketball$Height_Ft <- floor(basketball$Height_Inches / 12)

# create remainder of inches column
basketball$Height_Inches_Rem <- round(basketball$Height_Inches %% 12)

# filter even further for only mens basketball data
mens_basketball <- subset(basketball, Event %in% c("Basketball Men's Basketball"))

# convert decade column to factor for plotting
mens_basketball$Decade = as.factor(mens_basketball$Decade)

# find mode for 1930 and 2010
basketball_summary_stats_by_group = mens_basketball |>
  group_by(Decade) |>
  summarize(mode = Mode(Height_Inches, na.rm = TRUE)) |>
  ungroup()

# violin plot
mens_basketball|>
  ggplot(aes(x = Height_Inches, y = Decade, fill = Decade)) +
  geom_density_ridges() +
  scale_fill_brewer(palette = "Oranges") +
  scale_x_continuous(breaks = seq(60, 90, by = 5)) +
  labs(x = "Height (inches)",
       y = NULL,
       title = "The Increase of Olympic Men's Basketball Player Heights",
       subtitle = "from the 1930's to the 2010's") +
  geom_segment(aes(x = 80.65, y = 10.45, xend = 88, yend = 4.5), linewidth = 0.3) +
  geom_segment(aes(x = 72.2, y = 2.7, xend = 88, yend = 4.5), linewidth = 0.3) +
  geom_text(aes(x = 81.3, y = 10.8, label = "6'8\""), size = 3) +
  geom_text(aes(x = 72.7, y = 3.05, label = "6'0\""), size = 3) +
  annotate("point", x = 80.65, y = 10.45, fill = "red", size = 3, shape = 21, stroke = 0.5) +
  annotate("point", x = 72.2, y = 2.7, fill = "red", size = 3, shape = 21, stroke = 0.5) +
  geom_label(aes(x = 88, y = 4.5, label = "The most common\nplayer height has\nincreased by 8 inches\nsince the 1930's"),
             color = "black", fill = "white", size = 3, fontface = "bold") +
  theme(legend.position = "none",
        panel.background = element_rect(fill = "white"),
        plot.title = element_text(face = "bold"),
        axis.ticks.x = element_blank(),
        axis.ticks.y = element_blank()) +
  coord_cartesian(clip = "off")
```

## Viz 1 References

<https://r-coder.com/subset-r/>

<https://stackoverflow.com/questions/35352914/floor-a-year-to-the-decade-in-r>

# Visualization 2

Line plot of median, 10th, and 90th percentile of height over time?

Line plot of median heights over time by country?

```{r}
#| label: Visualization 2
#| warning: False

medals_by_height = as.data.frame(cbind(mens_basketball$Height_Inches,
                         mens_basketball$Medal))

colnames(medals_by_height) = c("height",
                               "medal")

medals_by_height$medal = replace_na(medals_by_height$medal, "none")
medals_by_height$medal = factor(medals_by_height$medal, levels = c("none",
                                                                   "Gold",
                                                                   "Silver",
                                                                   "Bronze"))
medals_by_height$height = as.numeric(medals_by_height$height)

medals_by_height |>
  ggplot(aes(x = height, fill = medal)) +
  geom_histogram(binwidth = 1, position = "fill", color = "black") +
  scale_fill_manual(values = c("black",
                               "#FFD700",
                               "#C0C0C0",
                               "#CD7F32")) +
  xlim(65, 90) +
  labs(x = "Height", y = "Proportion", fill = "Medal") +
  theme_minimal()
```
