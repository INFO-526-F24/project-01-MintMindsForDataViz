{
  "hash": "292d995ce056941c55ab9774b62e7bc1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Proposal title\"\nsubtitle: \"Proposal\"\nauthor: \n  - name: \"Mint Minds For DataViz\"\n    affiliations:\n      - name: \"School of Information, University of Arizona\"\ndescription: \"Project description\"\nformat:\n  html:\n    code-tools: true\n    code-overflow: wrap\n    code-line-numbers: true\n    embed-resources: true\neditor: visual\ncode-annotations: hover\nexecute:\n  warning: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!require(\"pacman\")) \n  install.packages(\"pacman\")\n\npacman::p_load(tidyverse,\n              ggplot2)\n```\n:::\n\n\n## Datasets\n\n\n::: {.cell}\n\n```{.r .cell-code}\nolympics = read.csv(\"data/athlete_events.csv\")\nAmazon = read.csv(\"data/Amazon Sales.csv\")\nstock_prices = read.csv(\"data/big_tech_stock_prices.csv\")\n```\n:::\n\n\n## **Introduction and data**\n\n### Olympic Data Set (athlete_events.csv)\n\nOur data set comes from 2024-08-06 tidytuesday, and contains data from every Olympic Games ranging from Athens 1896 to Rio 2016. The data set is 271,116 rows by 15 columns and contains data for every Olympic medal winner such as their name, sex, country, height, weight, and games they won the medal at.\n\nIt is important to note that winter and summer games were held in the same year up until 1992. From 1992 onward they were staggered by two years.\n\n### Big Tech Stock Prices (big_tech_stock_prices.csv)\n\nBit tech stock price dataset from 2023-02-07 tidytuesday. The data has 45089 rows and 8 columns. Rows has the stock stock symbol, date, open, high, low, close, adj close, volume from 2010-01-04 to 2022-12-29 of the following companies: Adobe Inc., Amazon.com, Inc., Salesforce, Inc., Cisco Systems, Inc., Alphabet Inc., IBM, Intel Corporation, Meta Platforms, Inc., Microsoft Corporation, Netflix, Inc., NVIDIA Corporation, Oracle Corporation, Tesla, Inc.\n\n### Amazon Sales Report (Amazon Sales.csv)\n\nWe have taken this dataset from kaggle/e-commerce-sales-data, by Anil, and data belongs to Amazon.com. This dataset has 128975 rows and 24 column of data. This dataset provides detailed insights into Amazon sales data, including SKU Code, Design Number, Stock, Category, Size and Color, to help visualization of profitability. The dataset tracks transactions made by customers in an online retail store to analyze purchasing behavior and identify sales trends.\n\n## Questions\n\n### Olympic Data Set (athlete_events.csv)\n\n1.  Is there an ideal height or weight for each event? If so, what are they and have they changed over time?\n2.  How has the performance of different countries changed over time? Are there any major events that could have led to a change in performance? (medal count over time / gold medals over time)\n\n### Big Tech Stock Prices (big_tech_stock_prices.csv)\n\n1.  Is there any relationship between daily volatility open price and close price with the volume of stocks?\n\n-   This question is important because it can help trader to understand the relationship between the volume of stocks and the daily volatility of the stock price.\n\n2.  do closing price of stock of Big Tech companies correlate with each other over time?\n\n-   This question is important because it provides traders insights of closing prices of Big Tech companies related to volume of stock, it will help them to make investment decisions.\n\n### Amazon Sales Report (Amazon Sales.csv)\n\n1.  What is the distribution of order statuses, and which status is the most common?\n2.  What are the top three product categories with the highest total sales amount?\n\n## Analysis plan\n\n-   A plan for answering each of the questions including the variables involved, variables to be created (if any), external data to be merged in (if any).\n\n### Olympic Data Set (athlete_events.csv)\n\n1.  Variables: Sex, Height, Weight, Medal, Sport, Games, Year. We will investigate the distributions of height and weight of athletes across different sports and sexes. We can also investigate if so-called \"ideal\" heights and weights have changed over time for each event. This question has the potential to raise ethical concerns in that anyone is able to succeed in any sport no matter their height/weight. We just want to investigate whether or not there is a historical trend of success across different events in athletes with certain heights/weights.\n2.  Olympics data variables: Year, Games, Country, Medal, Event. World Events data variables: Name, Year, Month, Country, Type, Place, Impact, Effected Population, Person/Group Responsible, Outcome. We will investigate the change in medal count per country over time; overall and by event. We can use the world events data in order to find a potential cause for observed medal count changes.\n\n### Big Tech Stock Prices (big_tech_stock_prices.csv)\n\n1 . Variables: Date, Open, High, Low, Close, Adj Close, Volume. We will create new variables for daily volatility and investigate the relationship between daily volatility, open price, close price, and volume of stocks. 2. Variables: Date, Close. We’ll examine how the closing price of different Big Tech companies moves together by calculating correlations between them.\n\n### Amazon Sales Report (Amazon Sales.csv)\n\n1.  Amazon Sales Variables: \"Status\", \"Order ID\". New variable created for counting unique order status is status_frequency. At first part of using data we will check if all the values in Status is clean without any duplicates or spelling errors (suppose \"Shipped\" or \"shipped\"). Next approach will be calculating the count of each Status for better understanding of their distribution. For visualization part barplot is created for visualizing the different order status. This question can help dedicated team of company to access the efficiency of the order fulfillment.\n\n2.  Variables used: \"Category\", \"Amount\". Creates a new variable that sums up the Sale Amount for each Product Category \"Total_sales_by_product\". First step will be to check if Category and amount variables don't have missing values, especially in Amount. Then we will group data by product category(Category) and sales_amount(Amount), which will be used to rank category by total_sales_value, at this point we will have Top 3 category which has highest sales amount. At the end for visualization we will create a barplot displaying the total sales for each category, with emphasis on the top three categories. This question can help company to focus on top product category of platform and less on least popular category for revenue management.\n\n## **Glimpse of data**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(olympics)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 271,116\nColumns: 15\n$ ID     <int> 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, …\n$ Name   <chr> \"A Dijiang\", \"A Lamusi\", \"Gunnar Nielsen Aaby\", \"Edgar Lindenau…\n$ Sex    <chr> \"M\", \"M\", \"M\", \"M\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"M\", \"M\", \"M\"…\n$ Age    <int> 24, 23, 24, 34, 21, 21, 25, 25, 27, 27, 31, 31, 31, 31, 33, 33,…\n$ Height <int> 180, 170, NA, NA, 185, 185, 185, 185, 185, 185, 188, 188, 188, …\n$ Weight <dbl> 80, 60, NA, NA, 82, 82, 82, 82, 82, 82, 75, 75, 75, 75, 75, 75,…\n$ Team   <chr> \"China\", \"China\", \"Denmark\", \"Denmark/Sweden\", \"Netherlands\", \"…\n$ NOC    <chr> \"CHN\", \"CHN\", \"DEN\", \"DEN\", \"NED\", \"NED\", \"NED\", \"NED\", \"NED\", …\n$ Games  <chr> \"1992 Summer\", \"2012 Summer\", \"1920 Summer\", \"1900 Summer\", \"19…\n$ Year   <int> 1992, 2012, 1920, 1900, 1988, 1988, 1992, 1992, 1994, 1994, 199…\n$ Season <chr> \"Summer\", \"Summer\", \"Summer\", \"Summer\", \"Winter\", \"Winter\", \"Wi…\n$ City   <chr> \"Barcelona\", \"London\", \"Antwerpen\", \"Paris\", \"Calgary\", \"Calgar…\n$ Sport  <chr> \"Basketball\", \"Judo\", \"Football\", \"Tug-Of-War\", \"Speed Skating\"…\n$ Event  <chr> \"Basketball Men's Basketball\", \"Judo Men's Extra-Lightweight\", …\n$ Medal  <chr> NA, NA, NA, \"Gold\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(stock_prices)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 45,088\nColumns: 8\n$ stock_symbol <chr> \"AAPL\", \"AAPL\", \"AAPL\", \"AAPL\", \"AAPL\", \"AAPL\", \"AAPL\", \"…\n$ date         <chr> \"2010-01-04\", \"2010-01-05\", \"2010-01-06\", \"2010-01-07\", \"…\n$ open         <dbl> 7.622500, 7.664286, 7.656429, 7.562500, 7.510714, 7.60000…\n$ high         <dbl> 7.660714, 7.699643, 7.686786, 7.571429, 7.571429, 7.60714…\n$ low          <dbl> 7.585000, 7.616071, 7.526786, 7.466071, 7.466429, 7.44464…\n$ close        <dbl> 7.643214, 7.656429, 7.534643, 7.520714, 7.570714, 7.50392…\n$ adj_close    <dbl> 6.515213, 6.526476, 6.422664, 6.410790, 6.453412, 6.39648…\n$ volume       <int> 493729600, 601904800, 552160000, 477131200, 447610800, 46…\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(Amazon)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 128,975\nColumns: 24\n$ index              <int> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1…\n$ Order.ID           <chr> \"405-8078784-5731545\", \"171-9198151-1101146\", \"404-…\n$ Date               <chr> \"04-30-22\", \"04-30-22\", \"04-30-22\", \"04-30-22\", \"04…\n$ Status             <chr> \"Cancelled\", \"Shipped - Delivered to Buyer\", \"Shipp…\n$ Fulfilment         <chr> \"Merchant\", \"Merchant\", \"Amazon\", \"Merchant\", \"Amaz…\n$ Sales.Channel      <chr> \"Amazon.in\", \"Amazon.in\", \"Amazon.in\", \"Amazon.in\",…\n$ ship.service.level <chr> \"Standard\", \"Standard\", \"Expedited\", \"Standard\", \"E…\n$ Style              <chr> \"SET389\", \"JNE3781\", \"JNE3371\", \"J0341\", \"JNE3671\",…\n$ SKU                <chr> \"SET389-KR-NP-S\", \"JNE3781-KR-XXXL\", \"JNE3371-KR-XL…\n$ Category           <chr> \"Set\", \"kurta\", \"kurta\", \"Western Dress\", \"Top\", \"S…\n$ Size               <chr> \"S\", \"3XL\", \"XL\", \"L\", \"3XL\", \"XL\", \"L\", \"S\", \"3XL\"…\n$ ASIN               <chr> \"B09KXVBD7Z\", \"B09K3WFS32\", \"B07WV4JV4D\", \"B099NRCT…\n$ Courier.Status     <chr> \"\", \"Shipped\", \"Shipped\", \"\", \"Shipped\", \"Shipped\",…\n$ Qty                <int> 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ currency           <chr> \"INR\", \"INR\", \"INR\", \"INR\", \"INR\", \"INR\", \"INR\", \"I…\n$ Amount             <dbl> 647.62, 406.00, 329.00, 753.33, 574.00, 824.00, 653…\n$ ship.city          <chr> \"MUMBAI\", \"BENGALURU\", \"NAVI MUMBAI\", \"PUDUCHERRY\",…\n$ ship.state         <chr> \"MAHARASHTRA\", \"KARNATAKA\", \"MAHARASHTRA\", \"PUDUCHE…\n$ ship.postal.code   <dbl> 400081, 560085, 410210, 605008, 600073, 201102, 160…\n$ ship.country       <chr> \"IN\", \"IN\", \"IN\", \"IN\", \"IN\", \"IN\", \"IN\", \"IN\", \"IN…\n$ promotion.ids      <chr> \"\", \"Amazon PLCC Free-Financing Universal Merchant …\n$ B2B                <chr> \"False\", \"False\", \"True\", \"False\", \"False\", \"False\"…\n$ fulfilled.by       <chr> \"Easy Ship\", \"Easy Ship\", \"\", \"Easy Ship\", \"\", \"\", …\n$ Unnamed..22        <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",…\n```\n\n\n:::\n:::\n",
    "supporting": [
      "proposal_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}